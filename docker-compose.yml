version: "3.8"

services:
  product-service:
    container_name: product-service
    build:
      context: product-service/.
    ports:
      - "8081:8080"
    env_file:
      - product-service/.env
    depends_on:
      - product_db
      - discovery-service
    volumes:
      - ./product-service/src:/app/src:rw
      - ./product-service/target:/app/target:rw
    command:
      sh -c "mvn spring-boot:run"

  discovery-service:
    container_name: discovery-service
    build:
      context: discovery-service/.
    ports:
      - "8761:8761"


    volumes:
      - ./discovery-service/src:/app/src:rw
      - ./discovery-service/target:/app/target:rw
    command:
      sh -c "mvn spring-boot:run"

  cart-service:
    container_name: cart-service
    build:
      context: cart-service/.
    ports:
      - "8082:8080"
    env_file:
      - cart-service/.env
    depends_on:
      - discovery-service
      - redis
    volumes:
      - ./cart-service/src:/app/src:rw
      - ./cart-service/target:/app/target:rw
    command:
      sh -c "mvn spring-boot:run"

  order-service:
    container_name: order-service
    build:
      context: order-service/.
    ports:
      - "8083:8080"
    env_file:
      - order-service/.env
    depends_on:
      - discovery-service
    volumes:
      - ./cart-service/src:/app/src:rw
      - ./cart-service/target:/app/target:rw
    command:
      sh -c "mvn spring-boot:run"

  auth-service:
    container_name: auth-service
    build:
      context: auth-service/.
    ports:
      - "8084:8080"
    env_file:
      - auth-service/.env
    depends_on:
      - auth_db
      - discovery-service
    volumes:
      - ./product-service/src:/app/src:rw
      - ./product-service/target:/app/target:rw
    command:
      sh -c "mvn spring-boot:run"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379" # Maps Redis' default port
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    volumes:
      - redis_data:/data

  product_db:
    image: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5433:5433
    environment:
      - POSTGRES_USER=ecommerce
      - POSTGRES_PASSWORD=ecommerce
      - POSTGRES_DB=product
      - PGDATA=/var/lib/postgresql/data

  auth_db:
    image: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5431:5431
    environment:
      - POSTGRES_USER=ecommerce
      - POSTGRES_PASSWORD=ecommerce
      - POSTGRES_DB=authdb
      - PGDATA=/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db


volumes:
  postgres_data:
  redis_data:

