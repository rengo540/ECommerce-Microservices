version: "3.8"

services:
  product-service:
    container_name: product-service
    build:
      context: product-service/.
    ports:
      - "8081:8080"
    env_file:
      - product-service/.env
    depends_on:
      - product-db
      - discovery-service
    volumes:
      - ./product-service/src:/app/src:rw
      - ./product-service/target:/app/target:rw
    command: mvn spring-boot:run

  discovery-service:
    container_name: discovery-service
    build:
      context: discovery-service/.
    ports:
      - "8761:8761"
    command: java -jar /app/app.jar

  cart-service:
    container_name: cart-service
    build:
      context: cart-service/.
    ports:
      - "8082:8080"
    env_file:
      - cart-service/.env
    depends_on:
      - discovery-service
      - redis
    volumes:
      - ./cart-service/src:/app/src:rw
      - ./cart-service/target:/app/target:rw
    command: mvn spring-boot:run

  order-service:
    container_name: order-service
    build:
      context: order-service/.
    ports:
      - "8083:8080"
    env_file:
      - order-service/.env
    depends_on:
      - discovery-service
      - redis
    volumes:
      - ./order-service/src:/app/src:rw
      - ./order-service/target:/app/target:rw
    command: mvn spring-boot:run

  auth-service:
    container_name: auth-service
    build:
      context: auth-service/.
    ports:
      - "8084:8080"
    env_file:
      - auth-service/.env
    depends_on:
      - auth-db
      - discovery-service
    volumes:
      - ./auth-service/src:/app/src:rw
      - ./auth-service/target:/app/target:rw
    command: mvn spring-boot:run

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    volumes:
      - redis_data:/data
    sysctls:
      - vm.overcommit_memory=1

  product-db:
    container_name: product-db
    image: postgres:13-alpine
    restart: always
    volumes:
      - productdb_postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=ecommerce
      - POSTGRES_PASSWORD=ecommerce
      - POSTGRES_DB=product

  auth-db:
    container_name: auth-db
    image: postgres:13-alpine
    restart: always
    volumes:
      - authdb_postgres_data:/var/lib/postgresql/data/
    ports:
      - "5431:5432"
    environment:
      - POSTGRES_USER=ecommerce
      - POSTGRES_PASSWORD=ecommerce
      - POSTGRES_DB=authdb

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - product_db
      - auth_db

volumes:
  productdb_postgres_data:
  authdb_postgres_data:
  redis_data: